#!/usr/bin/env mksh
#

# === {{CMD}}

PATH="$PATH:$THIS_DIR/../sh_color/bin"
PATH="$PATH:$THIS_DIR/../process/bin"
PATH="$PATH:$THIS_DIR/../my_network/bin"
PATH="$PATH:$THIS_DIR/bin"
PATH="$PATH:$THIS_DIR/tmp/latest-crystal/bin"

cd "$THIS_DIR"
mkdir -p "tmp/in" "tmp/out"

if [[ -z "$@" ]]; then
  local +x ACTION=watch
else
  local +x ACTION="$1"; shift
fi

case "$ACTION" in
  edit)
    mkdir -p tmp/in
    exec $EDITOR tmp/in/scratch.cr
    ;;

  watch)
    export CONTROLLER_PID="$$"
    local +x CMD="my_crystal scratch run"
    $CMD || :
    process watch "-r bin -r sh -r tmp/in" "$CMD"
    ;;

  run)
    reset
    mkdir -p tmp/bin tmp/in tmp/out

    local +x IN_FILE="tmp/in/scratch.cr"
    local +x OUT_FILE="tmp/out/scratch"

    echo "=== Compiling... $(date "+%H:%M:%S") ..." >&2

    if [[ ! -f "$IN_FILE" ]]; then
      sh_color RED "=== File does not exist: {{$IN_FILE}}"
    fi

    my_crystal __ build "$IN_FILE" -o "$OUT_FILE"

    if grep "server.listen" "$IN_FILE" ; then
      pkill -f "$OUT_FILE" || :
      sh_color ORANGE "=== {{Running}}..."
      ( ./out/scratch || : ) &
      sleep 1
      reset
      my_network inspect http://localhost:3000/ && echo
      my_network inspect http://localhost:3000/hello/world && echo
      my_network inspect http://localhost:3000/hello/the/entire/world && echo
      my_network inspect http://localhost:3000/missing && echo
    else
      sh_color ORANGE "=== {{Running}}..."
      "$OUT_FILE" && sh_color GREEN "=== {{DONE}} ===" || sh_color RED "=== {{DONE}} ==="
    fi
    ;;

  *)
    sh_color RED "=== {{Invalid arguments}}: BOLD{{$ACTION $@}}"
    exit 2
    ;;
esac



