#!/usr/bin/env mksh
#

# === {{CMD}}  --runtime
# === {{CMD}}  # Installs latest Crystal version.

get-output () {
  "$@" 2>/dev/null || :
}

if [[ "$(arch)" != 'x86_64' ]]; then
  echo "!!! Only 64-bit architecures supported." >&2
  echo "   (Only 512 fibers allowed in 32-bit architectures.)" >&2
  exit 2
fi

local +x MAIN_DIR="$THIS_DIR/tmp/crystal-versions"

if [[ "$(echo $@)" == "--runtime" ]]; then
  case "$(lsb_release -r -c -s)" in
    "rolling void")
      PATH="$PATH:$THIS_DIR/../my_os/bin"
      my_os package --install libgcc-devel libevent-devel libllvm6.0 \
        libevent-devel gc gc-devel lzo-devel libmcrypt-devel libgcrypt-devel \
        libressl-devel
      ;;
  esac
  return 0
else
  MAIN_DIR="$@"
  if [[ -z "$MAIN_DIR" ]]; then
    echo "!!! No instal dir specified." >&2
    exit 1
  fi

  if [[ ! -d "$MAIN_DIR" ]]; then
    echo "!!! Not a dir: $MAIN_DIR" >&2
    exit 1
  fi
fi

my_crystal install --runtime

local +x LATEST="$(my_crystal latest)"
local +x DIR="$MAIN_DIR/$LATEST"
local +x CRYSTAL="$DIR/bin/crystal"

if [[ -z "$LATEST" ]]; then
  echo "!!! Could not determine latest Crystal download on the Internet." >&2
  exit 1
fi

my_crystal cache clear

if [[ -x "$CRYSTAL" ]]; then
  echo "=== Already installed: " >&2
  echo "$LATEST" >&2
  "$CRYSTAL" --version
  return 0
fi

mkdir -p "$(dirname "$DIR")"

local +x TMP_FILE="$(my_crystal download $LATEST)"
if [[ -z "$TMP_FILE" ]]; then
  exit 5
fi

local +x TMP_DIR="$(mktemp -d)"
mkdir -p "$TMP_DIR"
cd "$TMP_DIR"
tar -zxf "$TMP_FILE"

mv crystal-* "$DIR"
cd "$THIS_DIR"
rm -rf "$TMP_DIR"

echo "$LATEST" > "$CRYSTAL_VERSION_FILE"
echo "=== Installed Crystal:" >&2
"$CRYSTAL" --version


