#!/usr/bin/env mksh
#

# === {{CMD}}  # Installs Crystal and Shards to /progs

get-output () {
  "$@" 2>/dev/null || :
}


if [[ "$(arch)" != 'x86_64' ]]; then
  echo "!!! Only 64-bit architecures supported." >&2
  echo "   (Only 512 fibers allowed in 32-bit architectures.)" >&2
  exit 2
fi

case "$(lsb_release -r -c -s)" in
  "rolling void")
    PATH="$PATH:$THIS_DIR/../my_os/bin"
    my_os package --install libevent-devel gc gc-devel lzo-devel libmcrypt-devel libgcrypt-devel libressl-devel
    ;;
esac

local +x NAME="Crystal"
local +x EXEC_FILE="crystal"
local +x URL="https://github.com/crystal-lang/crystal/releases"

local +x STORAGE="$THIS_DIR/progs/$EXEC_FILE"
local +x LATEST="$(my_crystal latest)"
local +x BASENAME="$(basename "$LATEST")"
local +x VERSION="${BASENAME%$*-linux*}"
local +x DIR="$STORAGE/versions/$VERSION"
local +x LATEST_LINK="$THIS_DIR/progs/latest-$EXEC_FILE"

if [[ -z "$LATEST" ]]; then
  echo "!!! Could not determine latest $NAME download on the Internet." >&2
  exit 2
fi

local +x CRYSTAL="$LATEST_LINK/bin/crystal"
if [[ -x "$CRYSTAL" ]]; then
  local +x LATEST_VERSION="$(get-output "$CRYSTAL" --version)"

  if [[ ! -z "$LATEST_VERSION" && "$LATEST_VERSION" == "$(get-output "$DIR"/bin/crystal --version)" ]]; then
    echo "=== Already installed latest $NAME:" >&2
    echo "$DIR" >&2
    "$LATEST_LINK"/bin/crystal --version >&2
    return 0
  fi
fi

mkdir -p "$(dirname "$DIR")"
mkdir -p "$THIS_DIR/tmp"

local +x TMP_FILE="$(my_crystal download)"

cd "$(dirname "$DIR")"
tar -zxf "$TMP_FILE"

rm -f "$LATEST_LINK"
ln -s "$DIR" "$LATEST_LINK"
echo "=== Installed Crystal:" >&2
"$LATEST_LINK"/bin/crystal --version >&2


